{"ast":null,"code":"(function () {\n  'use strict';\n\n  var L = require('leaflet');\n\n  var corslite = require('corslite');\n\n  var polyline = require('polyline');\n\n  L.Routing = L.Routing || {};\n  L.Routing.GraphHopper = L.Evented.extend({\n    options: {\n      serviceUrl: 'https://graphhopper.com/api/1/route',\n      timeout: 30 * 1000,\n      urlParameters: {}\n    },\n    initialize: function (apiKey, options) {\n      this._apiKey = apiKey;\n      L.Util.setOptions(this, options);\n    },\n    route: function (waypoints, callback, context, options) {\n      var timedOut = false,\n          wps = [],\n          url,\n          timer,\n          wp,\n          i;\n      options = options || {};\n      url = this.buildRouteUrl(waypoints, options);\n      timer = setTimeout(function () {\n        timedOut = true;\n        callback.call(context || callback, {\n          status: -1,\n          message: 'GraphHopper request timed out.'\n        });\n      }, this.options.timeout); // Create a copy of the waypoints, since they\n      // might otherwise be asynchronously modified while\n      // the request is being processed.\n\n      for (i = 0; i < waypoints.length; i++) {\n        wp = waypoints[i];\n        wps.push({\n          latLng: wp.latLng,\n          name: wp.name,\n          options: wp.options\n        });\n      }\n\n      corslite(url, L.bind(function (err, resp) {\n        var data;\n        clearTimeout(timer);\n\n        if (!timedOut) {\n          var fired = err ? err : resp;\n          this.fire(\"response\", {\n            status: fired.status,\n            limit: Number(fired.getResponseHeader(\"X-RateLimit-Limit\")),\n            remaining: Number(fired.getResponseHeader(\"X-RateLimit-Remaining\")),\n            reset: Number(fired.getResponseHeader(\"X-RateLimit-Reset\")),\n            credits: Number(fired.getResponseHeader(\"X-RateLimit-Credits\"))\n          });\n\n          if (!err) {\n            data = JSON.parse(resp.responseText);\n\n            this._routeDone(data, wps, callback, context);\n          } else {\n            var finalResponse;\n            var responseText = err && err.responseText;\n\n            try {\n              finalResponse = JSON.parse(responseText);\n            } catch (e) {\n              finalResponse = responseText;\n            }\n\n            callback.call(context || callback, {\n              status: -1,\n              message: 'HTTP request failed: ' + err,\n              response: finalResponse\n            });\n          }\n        }\n      }, this));\n      return this;\n    },\n    _routeDone: function (response, inputWaypoints, callback, context) {\n      var alts = [],\n          mappedWaypoints,\n          coordinates,\n          i,\n          path;\n      context = context || callback;\n\n      if (response.info && response.info.errors && response.info.errors.length) {\n        callback.call(context, {\n          // TODO: include all errors\n          status: response.info.errors[0].details,\n          message: response.info.errors[0].message\n        });\n        return;\n      }\n\n      for (i = 0; i < response.paths.length; i++) {\n        path = response.paths[i];\n        coordinates = this._decodePolyline(path.points);\n\n        if (path.points_order) {\n          var tempWaypoints = [];\n\n          for (i = 0; i < path.points_order.length; i++) {\n            tempWaypoints.push(inputWaypoints[path.points_order[i]]);\n          }\n\n          inputWaypoints = tempWaypoints;\n        }\n\n        mappedWaypoints = this._mapWaypointIndices(inputWaypoints, path.instructions, coordinates);\n        alts.push({\n          name: '',\n          coordinates: coordinates,\n          instructions: this._convertInstructions(path.instructions),\n          summary: {\n            totalDistance: path.distance,\n            totalTime: path.time / 1000,\n            totalAscend: path.ascend\n          },\n          inputWaypoints: inputWaypoints,\n          actualWaypoints: mappedWaypoints.waypoints,\n          waypointIndices: mappedWaypoints.waypointIndices\n        });\n      }\n\n      callback.call(context, null, alts);\n    },\n    _decodePolyline: function (geometry) {\n      var coords = polyline.decode(geometry, 5),\n          latlngs = new Array(coords.length),\n          i;\n\n      for (i = 0; i < coords.length; i++) {\n        latlngs[i] = new L.LatLng(coords[i][0], coords[i][1]);\n      }\n\n      return latlngs;\n    },\n    _toWaypoints: function (inputWaypoints, vias) {\n      var wps = [],\n          i;\n\n      for (i = 0; i < vias.length; i++) {\n        wps.push({\n          latLng: L.latLng(vias[i]),\n          name: inputWaypoints[i].name,\n          options: inputWaypoints[i].options\n        });\n      }\n\n      return wps;\n    },\n    buildRouteUrl: function (waypoints, options) {\n      var computeInstructions =\n      /* Instructions are always needed,\n         since we do not have waypoint indices otherwise */\n      true,\n          //!(options && options.geometryOnly),\n      locs = [],\n          i,\n          baseUrl;\n\n      for (i = 0; i < waypoints.length; i++) {\n        locs.push('point=' + waypoints[i].latLng.lat + ',' + waypoints[i].latLng.lng);\n      }\n\n      baseUrl = this.options.serviceUrl + '?' + locs.join('&');\n      return baseUrl + L.Util.getParamString(L.extend({\n        instructions: computeInstructions,\n        type: 'json',\n        key: this._apiKey\n      }, this.options.urlParameters), baseUrl);\n    },\n    _convertInstructions: function (instructions) {\n      var signToType = {\n        '-7': 'SlightLeft',\n        '-3': 'SharpLeft',\n        '-2': 'Left',\n        '-1': 'SlightLeft',\n        0: 'Straight',\n        1: 'SlightRight',\n        2: 'Right',\n        3: 'SharpRight',\n        4: 'DestinationReached',\n        5: 'WaypointReached',\n        6: 'Roundabout',\n        7: 'SlightRight'\n      },\n          result = [],\n          type,\n          i,\n          instr;\n\n      for (i = 0; instructions && i < instructions.length; i++) {\n        instr = instructions[i];\n\n        if (i === 0) {\n          type = 'Head';\n        } else {\n          type = signToType[instr.sign];\n        }\n\n        result.push({\n          type: type,\n          modifier: type,\n          text: instr.text,\n          distance: instr.distance,\n          time: instr.time / 1000,\n          index: instr.interval[0],\n          exit: instr.exit_number\n        });\n      }\n\n      return result;\n    },\n    _mapWaypointIndices: function (waypoints, instructions, coordinates) {\n      var wps = [],\n          wpIndices = [],\n          i,\n          idx;\n      wpIndices.push(0);\n      wps.push(new L.Routing.Waypoint(coordinates[0], waypoints[0].name));\n\n      for (i = 0; instructions && i < instructions.length; i++) {\n        if (instructions[i].sign === 5) {\n          // VIA_REACHED\n          idx = instructions[i].interval[0];\n          wpIndices.push(idx);\n          wps.push({\n            latLng: coordinates[idx],\n            name: waypoints[wps.length + 1].name\n          });\n        }\n      }\n\n      wpIndices.push(coordinates.length - 1);\n      wps.push({\n        latLng: coordinates[coordinates.length - 1],\n        name: waypoints[waypoints.length - 1].name\n      });\n      return {\n        waypointIndices: wpIndices,\n        waypoints: wps\n      };\n    }\n  });\n\n  L.Routing.graphHopper = function (apiKey, options) {\n    return new L.Routing.GraphHopper(apiKey, options);\n  };\n\n  module.exports = L.Routing.GraphHopper;\n})();","map":{"version":3,"sources":["/home/jahnavi/navigation/node_modules/lrm-graphhopper/src/L.Routing.GraphHopper.js"],"names":["L","require","corslite","polyline","Routing","GraphHopper","Evented","extend","options","serviceUrl","timeout","urlParameters","initialize","apiKey","_apiKey","Util","setOptions","route","waypoints","callback","context","timedOut","wps","url","timer","wp","i","buildRouteUrl","setTimeout","call","status","message","length","push","latLng","name","bind","err","resp","data","clearTimeout","fired","fire","limit","Number","getResponseHeader","remaining","reset","credits","JSON","parse","responseText","_routeDone","finalResponse","e","response","inputWaypoints","alts","mappedWaypoints","coordinates","path","info","errors","details","paths","_decodePolyline","points","points_order","tempWaypoints","_mapWaypointIndices","instructions","_convertInstructions","summary","totalDistance","distance","totalTime","time","totalAscend","ascend","actualWaypoints","waypointIndices","geometry","coords","decode","latlngs","Array","LatLng","_toWaypoints","vias","computeInstructions","locs","baseUrl","lat","lng","join","getParamString","type","key","signToType","result","instr","sign","modifier","text","index","interval","exit","exit_number","wpIndices","idx","Waypoint","graphHopper","module","exports"],"mappings":"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","sourcesContent":["(function() {\n\t'use strict';\n\n\tvar L = require('leaflet');\n\tvar corslite = require('corslite');\n\tvar polyline = require('polyline');\n\n\tL.Routing = L.Routing || {};\n\n\tL.Routing.GraphHopper = L.Evented.extend({\n\t\toptions: {\n\t\t\tserviceUrl: 'https://graphhopper.com/api/1/route',\n\t\t\ttimeout: 30 * 1000,\n\t\t\turlParameters: {}\n\t\t},\n\n\t\tinitialize: function(apiKey, options) {\n\t\t\tthis._apiKey = apiKey;\n\t\t\tL.Util.setOptions(this, options);\n\t\t},\n\n\t\troute: function(waypoints, callback, context, options) {\n\t\t\tvar timedOut = false,\n\t\t\t\twps = [],\n\t\t\t\turl,\n\t\t\t\ttimer,\n\t\t\t\twp,\n\t\t\t\ti;\n\n\t\t\toptions = options || {};\n\t\t\turl = this.buildRouteUrl(waypoints, options);\n\n\t\t\ttimer = setTimeout(function() {\n\t\t\t\t\t\t\t\ttimedOut = true;\n\t\t\t\t\t\t\t\tcallback.call(context || callback, {\n\t\t\t\t\t\t\t\t\tstatus: -1,\n\t\t\t\t\t\t\t\t\tmessage: 'GraphHopper request timed out.'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}, this.options.timeout);\n\n\t\t\t// Create a copy of the waypoints, since they\n\t\t\t// might otherwise be asynchronously modified while\n\t\t\t// the request is being processed.\n\t\t\tfor (i = 0; i < waypoints.length; i++) {\n\t\t\t\twp = waypoints[i];\n\t\t\t\twps.push({\n\t\t\t\t\tlatLng: wp.latLng,\n\t\t\t\t\tname: wp.name,\n\t\t\t\t\toptions: wp.options\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcorslite(url, L.bind(function(err, resp) {\n\t\t\t\tvar data;\n\n\t\t\t\tclearTimeout(timer);\n\t\t\t\tif (!timedOut) {\n\t\t\t\t\tvar fired = err ? err : resp;\n\t\t\t\t\tthis.fire(\"response\", {\n\t\t\t\t\t\tstatus: fired.status,\n\t\t\t\t\t\tlimit: Number(fired.getResponseHeader(\"X-RateLimit-Limit\")),\n\t\t\t\t\t\tremaining: Number(fired.getResponseHeader(\"X-RateLimit-Remaining\")),\n\t\t\t\t\t\treset: Number(fired.getResponseHeader(\"X-RateLimit-Reset\")),\n\t\t\t\t\t\tcredits: Number(fired.getResponseHeader(\"X-RateLimit-Credits\"))\n\t\t\t\t\t});\n\t\t\t\t\tif (!err) {\n\t\t\t\t\t\tdata = JSON.parse(resp.responseText);\n\t\t\t\t\t\tthis._routeDone(data, wps, callback, context);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar finalResponse;\n\t\t\t\t\t\tvar responseText = err && err.responseText;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tfinalResponse = JSON.parse(responseText);\n\t\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\tfinalResponse = responseText;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcallback.call(context || callback, {\n\t\t\t\t\t\t\tstatus: -1,\n\t\t\t\t\t\t\tmessage: 'HTTP request failed: ' + err,\n\t\t\t\t\t\t\tresponse: finalResponse\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, this));\n\n\t\t\treturn this;\n\t\t},\n\n\t\t_routeDone: function(response, inputWaypoints, callback, context) {\n\t\t\tvar alts = [],\n\t\t\t    mappedWaypoints,\n\t\t\t    coordinates,\n\t\t\t    i,\n\t\t\t    path;\n\n\t\t\tcontext = context || callback;\n\t\t\tif (response.info && response.info.errors && response.info.errors.length) {\n\t\t\t\tcallback.call(context, {\n\t\t\t\t\t// TODO: include all errors\n\t\t\t\t\tstatus: response.info.errors[0].details,\n\t\t\t\t\tmessage: response.info.errors[0].message\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor (i = 0; i < response.paths.length; i++) {\n\t\t\t\tpath = response.paths[i];\n\t\t\t\tcoordinates = this._decodePolyline(path.points);\n\t\t\t\tif (path.points_order) {\n\t\t\t\t\tvar tempWaypoints = [];\n\t\t\t\t\tfor (i = 0; i < path.points_order.length; i++) {\n\t\t\t\t\t\ttempWaypoints.push(inputWaypoints[path.points_order[i]]);\n\t\t\t\t\t}\n\t\t\t\t\tinputWaypoints = tempWaypoints;\n\t\t\t\t}\n\t\t\t\tmappedWaypoints =\n\t\t\t\t\tthis._mapWaypointIndices(inputWaypoints, path.instructions, coordinates);\n\n\t\t\t\talts.push({\n\t\t\t\t\tname: '',\n\t\t\t\t\tcoordinates: coordinates,\n\t\t\t\t\tinstructions: this._convertInstructions(path.instructions),\n\t\t\t\t\tsummary: {\n\t\t\t\t\t\ttotalDistance: path.distance,\n\t\t\t\t\t\ttotalTime: path.time / 1000,\n\t\t\t\t\t\ttotalAscend: path.ascend,\n\t\t\t\t\t},\n\t\t\t\t\tinputWaypoints: inputWaypoints,\n\t\t\t\t\tactualWaypoints: mappedWaypoints.waypoints,\n\t\t\t\t\twaypointIndices: mappedWaypoints.waypointIndices\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tcallback.call(context, null, alts);\n\t\t},\n\n\t\t_decodePolyline: function(geometry) {\n\t\t\tvar coords = polyline.decode(geometry, 5),\n\t\t\t\tlatlngs = new Array(coords.length),\n\t\t\t\ti;\n\t\t\tfor (i = 0; i < coords.length; i++) {\n\t\t\t\tlatlngs[i] = new L.LatLng(coords[i][0], coords[i][1]);\n\t\t\t}\n\n\t\t\treturn latlngs;\n\t\t},\n\n\t\t_toWaypoints: function(inputWaypoints, vias) {\n\t\t\tvar wps = [],\n\t\t\t    i;\n\t\t\tfor (i = 0; i < vias.length; i++) {\n\t\t\t\twps.push({\n\t\t\t\t\tlatLng: L.latLng(vias[i]),\n\t\t\t\t\tname: inputWaypoints[i].name,\n\t\t\t\t\toptions: inputWaypoints[i].options\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn wps;\n\t\t},\n\n\t\tbuildRouteUrl: function(waypoints, options) {\n\t\t\tvar computeInstructions =\n\t\t\t\t/* Instructions are always needed,\n\t\t\t\t   since we do not have waypoint indices otherwise */\n\t\t\t\ttrue,\n\t\t\t\t//!(options && options.geometryOnly),\n\t\t\t\tlocs = [],\n\t\t\t\ti,\n\t\t\t\tbaseUrl;\n\n\t\t\tfor (i = 0; i < waypoints.length; i++) {\n\t\t\t\tlocs.push('point=' + waypoints[i].latLng.lat + ',' + waypoints[i].latLng.lng);\n\t\t\t}\n\n\t\t\tbaseUrl = this.options.serviceUrl + '?' +\n\t\t\t\tlocs.join('&');\n\n\t\t\treturn baseUrl + L.Util.getParamString(L.extend({\n\t\t\t\t\tinstructions: computeInstructions,\n\t\t\t\t\ttype: 'json',\n\t\t\t\t\tkey: this._apiKey\n\t\t\t\t}, this.options.urlParameters), baseUrl);\n\t\t},\n\n\t\t_convertInstructions: function(instructions) {\n\t\t\tvar signToType = {\n\t\t\t\t\t'-7': 'SlightLeft',\n\t\t\t\t\t'-3': 'SharpLeft',\n\t\t\t\t\t'-2': 'Left',\n\t\t\t\t\t'-1': 'SlightLeft',\n\t\t\t\t\t0: 'Straight',\n\t\t\t\t\t1: 'SlightRight',\n\t\t\t\t\t2: 'Right',\n\t\t\t\t\t3: 'SharpRight',\n\t\t\t\t\t4: 'DestinationReached',\n\t\t\t\t\t5: 'WaypointReached',\n\t\t\t\t\t6: 'Roundabout',\n\t\t\t\t\t7: 'SlightRight'\n\t\t\t\t},\n\t\t\t\tresult = [],\n\t\t\t\ttype,\n\t\t\t\ti,\n\t\t\t\tinstr;\n\n\t\t\tfor (i = 0; instructions && i < instructions.length; i++) {\n\t\t\t\tinstr = instructions[i];\n\t\t\t\tif (i === 0) {\n\t\t\t\t\ttype = 'Head';\n\t\t\t\t} else {\n\t\t\t\t\ttype = signToType[instr.sign];\n\t\t\t\t}\n\t\t\t\tresult.push({\n\t\t\t\t\ttype: type,\n\t\t\t\t\tmodifier: type,\n\t\t\t\t\ttext: instr.text,\n\t\t\t\t\tdistance: instr.distance,\n\t\t\t\t\ttime: instr.time / 1000,\n\t\t\t\t\tindex: instr.interval[0],\n\t\t\t\t\texit: instr.exit_number\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\n\t\t_mapWaypointIndices: function(waypoints, instructions, coordinates) {\n\t\t\tvar wps = [],\n\t\t\t\twpIndices = [],\n\t\t\t    i,\n\t\t\t    idx;\n\n\t\t\twpIndices.push(0);\n\t\t\twps.push(new L.Routing.Waypoint(coordinates[0], waypoints[0].name));\n\n\t\t\tfor (i = 0; instructions && i < instructions.length; i++) {\n\t\t\t\tif (instructions[i].sign === 5) { // VIA_REACHED\n\t\t\t\t\tidx = instructions[i].interval[0];\n\t\t\t\t\twpIndices.push(idx);\n\t\t\t\t\twps.push({\n\t\t\t\t\t\tlatLng: coordinates[idx],\n\t\t\t\t\t\tname: waypoints[wps.length + 1].name\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\twpIndices.push(coordinates.length - 1);\n\t\t\twps.push({\n\t\t\t\tlatLng: coordinates[coordinates.length - 1],\n\t\t\t\tname: waypoints[waypoints.length - 1].name\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\twaypointIndices: wpIndices,\n\t\t\t\twaypoints: wps\n\t\t\t};\n\t\t}\n\t});\n\n\tL.Routing.graphHopper = function(apiKey, options) {\n\t\treturn new L.Routing.GraphHopper(apiKey, options);\n\t};\n\n\tmodule.exports = L.Routing.GraphHopper;\n})();\n"]},"metadata":{},"sourceType":"script"}