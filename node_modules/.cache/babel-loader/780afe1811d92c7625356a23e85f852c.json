{"ast":null,"code":"import axios from 'axios';\nimport config from '../../config';\nexport const userLogin = (data, cb) => async dispatch => {\n  const response = await axios.post(`${config.login}`, data);\n  const getDetails = response.data;\n  dispatch({\n    type: 'USER_LOGIN',\n    payload: getDetails\n  });\n  cb();\n};\nexport const userRegister = (data, cb) => async dispatch => {\n  const response = await axios.post(`${config.register}`, data);\n  const getDetails = response.data;\n  dispatch({\n    type: 'USER_REGISTER',\n    payload: getDetails\n  });\n  cb();\n};\nexport const sendOtp = (data, cb) => async dispatch => {\n  const response = await axios.post(`${config.sendOtp}`, data);\n  const getDetails = response.data;\n  dispatch({\n    type: 'SEND_OTP',\n    payload: getDetails\n  });\n  cb();\n};\nexport const verifyOtp = (data, cb) => async dispatch => {\n  const response = await axios.post(`${config.verifyOtp}`, data);\n  const getDetails = response.data;\n  dispatch({\n    type: 'VERIFY_OTP',\n    payload: getDetails\n  });\n  cb();\n};\nexport const sendEmailotp = (data, cb) => async dispatch => {\n  const response = await axios.post(`${config.sendEmailOtp}`, data);\n  const getDetails = response.data;\n  dispatch({\n    type: 'SEND_EMAILOTP',\n    payload: getDetails\n  });\n  cb();\n};\nexport const verifyEmailotp = (data, cb) => async dispatch => {\n  const response = await axios.post(`${config.verifyEmailOtp}`, data);\n  const getDetails = response.data;\n  dispatch({\n    type: 'VERIFY_EMAILOTP',\n    payload: getDetails\n  });\n  cb();\n};\nexport const forgotPassword = data => async dispatch => {\n  const response = await axios.post(`${config.forgotPassword}`, data);\n  const getDetails = response.data;\n  dispatch({\n    type: 'FORGOT_PASSWORD',\n    payload: getDetails\n  });\n};\nexport const userDetails = data => async dispatch => {\n  const response = await axios.post(config.userDetails, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'USER_DETAILS',\n    payload: getDetails\n  });\n};\nexport const resetPassword = data => async dispatch => {\n  const response = await axios.post(config.resetPassword, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'RESET_PASSWORD',\n    payload: getDetails\n  });\n}; // export const venueList = (data)=> async (dispatch)=>{\n//     const response = await axios.post(config.venueList,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n//     const getDetails = response.data;\n//     dispatch({type:'RESET_PASSWORD',payload:getDetails})\n// }\n\nexport const getAllBuildingElements = (data, next) => async dispatch => {\n  const response = await axios.get(`${config.navigationData}/${data.venueName}/${data.buildingName}/null`);\n  const responseData = response.data;\n  dispatch({\n    type: 'NAVIGATION_INFO',\n    payload: responseData\n  });\n  next();\n};\nexport const androidNavigation = (data, next) => async dispatch => {\n  const response = await axios.get(`${config.androidNavigation}/${data.venueName}/${data.buildingName}/null`);\n  const responseData = response.data;\n  let arra = [];\n\n  for (let i = 0; i < responseData.length; i++) {\n    if (responseData[i].element.type === \"Floor\") {\n      arra.push(responseData[i]);\n    }\n  }\n\n  dispatch({\n    type: 'ANDROID_NAVIGATION',\n    payload: arra\n  });\n  next();\n};\nexport const globalNavigation = (data, next) => async dispatch => {\n  const response = await axios.get(`${config.androidNavigation}/${data.venueName}/${data.buildingName}/null`);\n  console.log(\"data\", data, response);\n  const responseData = response.data;\n  dispatch({\n    type: 'GLOBAL_NAVIGATION',\n    payload: responseData\n  });\n  next();\n};\nexport const imgDetails = (venue, buildingname, floor, file, cb) => async dispatch => {\n  const response = await axios.get(`${config.imgDetails}${venue}/${buildingname}/${floor}/${file}`);\n  const pathResponse = response.data;\n  dispatch({\n    type: 'FETCH_IMAGE',\n    payload: pathResponse\n  });\n  cb();\n};\nexport const refPoint = (venue, building, floor, cb) => async dispatch => {\n  const response = await axios.get(`${config.globalRef}${venue}/${building}/${floor}`);\n  const responseData = response.data;\n  console.log(\"response\", responseData, venue, building, floor);\n  dispatch({\n    type: 'REF_POINT',\n    payload: responseData\n  });\n  cb();\n};\nexport const floorList = (buildingName, next) => async dispatch => {\n  const response = await axios.post(config.floorList, {\n    buildingName: buildingName\n  });\n  const allFloors = response.data;\n  dispatch({\n    type: 'FLOOR_LIST',\n    payload: allFloors\n  });\n  next();\n};\nexport const venueList = next => async dispatch => {\n  const response = await axios.post(config.venueList);\n  const getDetails = response.data;\n  dispatch({\n    type: 'VENUE_LIST',\n    payload: getDetails\n  });\n  next();\n}; // export const buildingList = (data)=> async (dispatch)=>{\n//     const response = await axios.post(config.buildingList,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n//     const getDetails = response.data;\n//     dispatch({type:'BUILDING_LIST',payload:getDetails})\n// }\n\nexport const buildingList = (data, cb) => async dispatch => {\n  const response = await axios.post(config.buildingList, data);\n  const getDetails = response.data;\n  dispatch({\n    type: 'BUILDING_LIST',\n    payload: getDetails\n  });\n  cb();\n};\nexport const getGpsLocation = (data, cb) => async dispatch => {\n  let latitude = data.lat.toString();\n  let longitude = data.lng.toString();\n  let url = `https://forward-reverse-geocoding.p.rapidapi.com/v1/reverse?lat=${latitude}&lon=${longitude}&format=json&accept-language=en&polygon_threshold=0.0`;\n  let resp = await fetch(url, {\n    \"method\": \"GET\",\n    \"headers\": {\n      \"x-rapidapi-key\": \"23d4e05de9msh6374022ee59c78ap1c8dfdjsn43be9985d2e1\",\n      \"x-rapidapi-host\": \"forward-reverse-geocoding.p.rapidapi.com\",\n      \"useQueryString\": true\n    }\n  });\n  let dt = await resp.json();\n  dispatch({\n    type: 'GPS_LOCATION',\n    payload: dt\n  });\n  cb();\n}; //Settings section\n\nexport const getUserInformation = (data, cb) => async dispatch => {\n  const response = await axios.post(config.userInformation, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'USER_INFORMATION',\n    payload: getDetails\n  });\n  cb();\n};\nexport const getUserPortfolio = (data, cb) => async dispatch => {\n  const response = await axios.post(config.userPortfolio, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'USER_PORTFOLIO',\n    payload: getDetails\n  });\n  cb();\n};\nexport const updateName = (data, cb) => async dispatch => {\n  const response = await axios.post(config.updateName, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'UPDATE_NAME',\n    payload: getDetails\n  });\n  cb();\n};\nexport const updatePassword = (data, cb) => async dispatch => {\n  const response = await axios.post(config.updatePassword, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'UPDATE_PASSWORD',\n    payload: getDetails\n  });\n  cb();\n};\nexport const updateMobile = (data, cb) => async dispatch => {\n  const response = await axios.post(config.updateMobile, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'UPDATE_MOBILE',\n    payload: getDetails\n  });\n  cb();\n};\nexport const updateEmail = (data, cb) => async dispatch => {\n  const response = await axios.post(config.updateEmail, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  console.log(\"update email response\", response);\n  dispatch({\n    type: 'UPDATE_EMAIL',\n    payload: getDetails\n  });\n  cb();\n}; ///\n\nexport const updateLanguage = (data, cb) => async dispatch => {\n  const response = await axios.post(config.updateLanguage, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'UPDATE_LANGUAGE',\n    payload: getDetails\n  });\n  cb();\n};\nexport const updateVision = (data, cb) => async dispatch => {\n  const response = await axios.post(config.updateVision, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'UPDATE_VISION',\n    payload: getDetails\n  });\n  cb();\n};\nexport const updateHeight = (data, cb) => async dispatch => {\n  const response = await axios.post(config.updateHeight, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'UPDATE_HEIGHT',\n    payload: getDetails\n  });\n  cb();\n};\nexport const updateAgegroup = (data, cb) => async dispatch => {\n  const response = await axios.post(config.updateAgegroup, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'UPDATE_AGEGROUP',\n    payload: getDetails\n  });\n  cb();\n};\nexport const updateWalking = (data, cb) => async dispatch => {\n  const response = await axios.post(config.updateWalking, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'UPDATE_WALKING',\n    payload: getDetails\n  });\n  cb();\n};\nexport const saveAddress = (data, cb) => async dispatch => {\n  const response = await axios.post(config.saveAddress, data, {\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': `${data.token}`\n    }\n  });\n  const getDetails = response.data;\n  dispatch({\n    type: 'SAVE_ADDRESS',\n    payload: getDetails\n  });\n  cb();\n};\nexport const osmRoutes = (data, cb) => async dispatch => {\n  let srcLat = data.srcLat;\n  let srcLng = data.srcLng;\n  let dstLat = data.dstLat;\n  let dstLng = data.dstLng; // console.log(\"ww\",`${config.osmRoutes}start=${srcLat},${srcLng}&end=${dstLat},${dstLng}`)\n  // const response = await axios.get(`${config.osmRoutes}${srcLat},${srcLng};${dstLat},${dstLng}?overview=false`);\n  // const getDetails = response.data;\n\n  const getDetails = [];\n  dispatch({\n    type: 'OSM_ROUTES',\n    payload: getDetails\n  });\n  cb();\n};\nexport const pickupPoints = (data, cb) => async dispatch => {\n  const response = await axios.get(`${config.pickUpPoints}/${data.venue}/${data.building}`);\n  const getDetails = response.data;\n  dispatch({\n    type: 'PICKUP_POINTS',\n    payload: getDetails\n  });\n  cb();\n};\nexport const navContent = (data, cb) => async dispatch => {\n  dispatch({\n    type: 'NAV_CONTENT',\n    payload: data\n  });\n  cb();\n};","map":{"version":3,"sources":["/home/jahnavi/navigation/src/store/actions/index.js"],"names":["axios","config","userLogin","data","cb","dispatch","response","post","login","getDetails","type","payload","userRegister","register","sendOtp","verifyOtp","sendEmailotp","sendEmailOtp","verifyEmailotp","verifyEmailOtp","forgotPassword","userDetails","headers","token","resetPassword","getAllBuildingElements","next","get","navigationData","venueName","buildingName","responseData","androidNavigation","arra","i","length","element","push","globalNavigation","console","log","imgDetails","venue","buildingname","floor","file","pathResponse","refPoint","building","globalRef","floorList","allFloors","venueList","buildingList","getGpsLocation","latitude","lat","toString","longitude","lng","url","resp","fetch","dt","json","getUserInformation","userInformation","getUserPortfolio","userPortfolio","updateName","updatePassword","updateMobile","updateEmail","updateLanguage","updateVision","updateHeight","updateAgegroup","updateWalking","saveAddress","osmRoutes","srcLat","srcLng","dstLat","dstLng","pickupPoints","pickUpPoints","navContent"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport config from '../../config';\n\nexport const userLogin = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(`${config.login}`,data);\n    const getDetails = response.data;\n    dispatch({type:'USER_LOGIN',payload:getDetails})\n    cb()\n}\n\nexport const userRegister = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(`${config.register}`,data);\n    const getDetails = response.data;\n    dispatch({type:'USER_REGISTER',payload:getDetails})\n    cb()\n}\n\nexport const sendOtp = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(`${config.sendOtp}`,data);\n    const getDetails = response.data;\n    dispatch({type:'SEND_OTP',payload:getDetails})\n    cb()\n}\n\nexport const verifyOtp = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(`${config.verifyOtp}`,data);\n    const getDetails = response.data;\n    dispatch({type:'VERIFY_OTP',payload:getDetails})\n    cb()\n}\n\nexport const sendEmailotp = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(`${config.sendEmailOtp}`,data);\n    const getDetails = response.data;\n    dispatch({type:'SEND_EMAILOTP',payload:getDetails})\n    cb()\n}\n\nexport const verifyEmailotp = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(`${config.verifyEmailOtp}`,data);\n    const getDetails = response.data;\n    dispatch({type:'VERIFY_EMAILOTP',payload:getDetails})\n    cb()\n}\n\nexport const forgotPassword = (data)=> async (dispatch)=>{\n    const response = await axios.post(`${config.forgotPassword}`,data);\n    const getDetails = response.data;\n    dispatch({type:'FORGOT_PASSWORD',payload:getDetails})\n\n}\n\nexport const userDetails = (data)=> async (dispatch)=>{\n    const response = await axios.post(config.userDetails,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'USER_DETAILS',payload:getDetails})\n}\n\nexport const resetPassword = (data)=> async (dispatch)=>{\n    const response = await axios.post(config.resetPassword,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'RESET_PASSWORD',payload:getDetails})\n}\n\n// export const venueList = (data)=> async (dispatch)=>{\n//     const response = await axios.post(config.venueList,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n//     const getDetails = response.data;\n//     dispatch({type:'RESET_PASSWORD',payload:getDetails})\n// }\n\nexport const getAllBuildingElements = (data,next)=> async (dispatch)=>{\n    const response = await axios.get(`${config.navigationData}/${data.venueName}/${data.buildingName}/null`);\n    const responseData = response.data;\n    dispatch({type:'NAVIGATION_INFO',payload:responseData})\n    next(); \n}\n\nexport const androidNavigation = (data,next)=> async (dispatch)=>{\n    const response = await axios.get(`${config.androidNavigation}/${data.venueName}/${data.buildingName}/null`);\n    const responseData = response.data;\n    let arra = [];\n    for (let i = 0; i < responseData.length; i++) {\n      if (responseData[i].element.type === \"Floor\") {\n          arra.push(responseData[i])\n    }\n    }\n    dispatch({type:'ANDROID_NAVIGATION',payload:arra})\n    next(); \n}\n\nexport const globalNavigation = (data,next)=> async (dispatch)=>{\n    const response = await axios.get(`${config.androidNavigation}/${data.venueName}/${data.buildingName}/null`);\n    console.log(\"data\",data,response)\n    const responseData = response.data;\n    dispatch({type:'GLOBAL_NAVIGATION',payload:responseData})\n    next(); \n}\n\nexport const imgDetails = (venue,buildingname,floor,file,cb)=> async  (dispatch)=>{\n    const response = await axios.get(`${config.imgDetails}${venue}/${buildingname}/${floor}/${file}`)\n    const pathResponse = response.data;\n    dispatch({type:'FETCH_IMAGE',payload: pathResponse});\n    cb();\n}\n\nexport const refPoint =  (venue,building,floor,cb) => async (dispatch) => {\n    const response = await axios.get(`${config.globalRef}${venue}/${building}/${floor}`);\n    const responseData = response.data;\n    console.log(\"response\",responseData,venue,building,floor)\n    dispatch({type:'REF_POINT',payload:responseData})\n    cb()\n}\n\nexport const floorList = (buildingName,next)=> async (dispatch)=>{\n    const response = await axios.post(config.floorList,{buildingName:buildingName});\n    const allFloors = response.data;\n    dispatch({type:'FLOOR_LIST',payload: allFloors})\n    next()\n}\n\nexport const venueList = (next)=> async (dispatch)=>{\n    const response = await axios.post(config.venueList);\n    const getDetails = response.data;\n    dispatch({type:'VENUE_LIST',payload:getDetails});\n    next();\n}\n\n// export const buildingList = (data)=> async (dispatch)=>{\n//     const response = await axios.post(config.buildingList,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n//     const getDetails = response.data;\n//     dispatch({type:'BUILDING_LIST',payload:getDetails})\n// }\n\nexport const buildingList = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.buildingList,data);\n    const getDetails = response.data;\n    dispatch({type:'BUILDING_LIST',payload:getDetails})\n    cb()\n}\n\nexport const getGpsLocation = (data,cb)=> async (dispatch)=>{\n    let latitude = data.lat.toString()\n    let longitude = data.lng.toString()\n    let url = `https://forward-reverse-geocoding.p.rapidapi.com/v1/reverse?lat=${latitude}&lon=${longitude}&format=json&accept-language=en&polygon_threshold=0.0`\n    let resp = await fetch(url,{\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"23d4e05de9msh6374022ee59c78ap1c8dfdjsn43be9985d2e1\",\n        \"x-rapidapi-host\": \"forward-reverse-geocoding.p.rapidapi.com\",\n        \"useQueryString\": true\n      }\n    })\n    let dt = await resp.json()\n    dispatch({type:'GPS_LOCATION',payload:dt})\n    cb()\n}\n\n//Settings section\nexport const getUserInformation = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.userInformation,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'USER_INFORMATION',payload:getDetails})\n    cb()\n}\n\nexport const getUserPortfolio = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.userPortfolio,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'USER_PORTFOLIO',payload:getDetails})\n    cb()\n}\n\nexport const updateName = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.updateName,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'UPDATE_NAME',payload:getDetails})\n    cb()\n}\n\nexport const updatePassword = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.updatePassword,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'UPDATE_PASSWORD',payload:getDetails})\n    cb()\n}\n\nexport const updateMobile = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.updateMobile,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'UPDATE_MOBILE',payload:getDetails})\n    cb()\n}\n\nexport const updateEmail = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.updateEmail,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    console.log(\"update email response\",response)\n    dispatch({type:'UPDATE_EMAIL',payload:getDetails})\n    cb()\n}\n///\nexport const updateLanguage = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.updateLanguage,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'UPDATE_LANGUAGE',payload:getDetails})\n    cb()\n}\n\nexport const updateVision = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.updateVision,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n\n    dispatch({type:'UPDATE_VISION',payload:getDetails})\n    cb()\n}\n\nexport const updateHeight = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.updateHeight,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'UPDATE_HEIGHT',payload:getDetails})\n    cb()\n}\n\nexport const updateAgegroup = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.updateAgegroup,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'UPDATE_AGEGROUP',payload:getDetails})\n    cb()\n}\n\nexport const updateWalking = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.updateWalking,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'UPDATE_WALKING',payload:getDetails})\n    cb()\n}\n\nexport const saveAddress = (data,cb)=> async (dispatch)=>{\n    const response = await axios.post(config.saveAddress,data,{headers:{ 'Content-Type': 'application/json', 'Authorization': `${data.token}` }});\n    const getDetails = response.data;\n    dispatch({type:'SAVE_ADDRESS',payload:getDetails})\n    cb()\n}\n\nexport const osmRoutes = (data,cb)=> async (dispatch)=>{\n    let srcLat = data.srcLat;\n    let srcLng = data.srcLng;\n    let dstLat = data.dstLat;\n    let dstLng = data.dstLng;\n    // console.log(\"ww\",`${config.osmRoutes}start=${srcLat},${srcLng}&end=${dstLat},${dstLng}`)\n    // const response = await axios.get(`${config.osmRoutes}${srcLat},${srcLng};${dstLat},${dstLng}?overview=false`);\n    // const getDetails = response.data;\n    const getDetails = [];\n    dispatch({type:'OSM_ROUTES',payload:getDetails})\n    cb()\n}\n\nexport const pickupPoints = (data,cb)=> async (dispatch)=>{\n    const response = await axios.get(`${config.pickUpPoints}/${data.venue}/${data.building}`);\n    const getDetails = response.data;\n    dispatch({type:'PICKUP_POINTS',payload:getDetails})\n    cb()\n}\n\nexport const navContent = (data,cb)=> async (dispatch)=>{\n    dispatch({type:'NAV_CONTENT',payload:data})\n    cb()\n}"]},"metadata":{},"sourceType":"module"}