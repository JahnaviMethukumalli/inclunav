{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/home/navigation/src/components/dashboard/Landing.js\";\nimport React from \"react\";\nimport { css } from \"@emotion/css\";\nimport Drawer from \"react-drag-drawer\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./css/dashboard.css\";\nimport { floorList, imgDetails, getAllBuildingElements, venueList, buildingList, getGpsLocation } from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"./navigation/Navigation\";\nimport { Link, Route } from \"react-router-dom\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport L from \"leaflet\";\nconst routes = [{\n  path: \"/test\",\n  component: Navigation\n}];\nconst center = {\n  lat: 28.6139,\n  lng: 77.209\n};\nconst Card = css`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 40px auto;\n  @media (min-width: 768px) {\n    border-radius: 0;\n  }\n  button {\n    margin-top: 50px;\n  }\n`;\nconst Toggle = css`\n  background-color: #d50152;\n  border-radius: 4px;\n  color: white;\n  border: 0;\n  padding: 10px;\n  font-size: 16px;\n  cursor: pointer;\n  outline: none;\n  margin-left: 50%;\n  margin-top: 0px !important;\n  transition: all 0.25s linear;\n  &:active {\n    transform: scale(0.9);\n  }\n`;\nconst modal = css`\n  position: absolute;\n  top: 30px;\n  background-color: white;\n  width: 100%;\n  max-width: 700px;\n  min-height: 100%;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n`;\nconst Sidebar = css`\n  ${modal} top: 0;\n  max-width: 300px;\n  border-radius: 0;\n  left: 0;\n  background: linear-gradient(to bottom, #09203f, #1d4a6d);\n`;\n\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.getVenueList = coordinates => {\n      this.props.venueList(() => {\n        this.setState({\n          venueList: this.props.vnList.data\n        }, () => {\n          this.findNearVenue(coordinates);\n        });\n      });\n    };\n\n    this.findNearVenue = coordinates => {\n      let {\n        venueList\n      } = this.state;\n      let distList = venueList.map(r => {\n        return this.getDistance(coordinates, r);\n      });\n      var lowest = Number.POSITIVE_INFINITY;\n      var highest = Number.NEGATIVE_INFINITY;\n      var tmp;\n      let nearLocation;\n\n      for (var i = distList.length - 1; i >= 0; i--) {\n        tmp = distList[i].distance;\n\n        if (tmp < lowest) {\n          nearLocation = distList[i];\n          lowest = tmp;\n        }\n\n        if (tmp > highest) highest = tmp;\n      }\n\n      if (lowest < 1) {\n        this.setState({\n          gpsLocation: nearLocation.address,\n          currentVenue: nearLocation\n        }, () => {\n          this.getBuildingList(nearLocation.venueName, coordinates);\n        });\n      }\n    };\n\n    this.getBuildingList = (venueName, coordinates) => {\n      this.props.buildingList({\n        venueName: \"IITCampusCheck\"\n      }, () => {\n        this.setState({\n          buildingList: this.props.bldList.data\n        }, () => {\n          if (this.state.buildingList.length > 0) {\n            this.findNearBuilding(coordinates);\n          }\n        });\n      });\n    };\n\n    this.findNearBuilding = coordinates => {\n      let {\n        buildingList\n      } = this.state;\n      let distList = buildingList.map(r => {\n        let p = [r.lat, r.lng];\n        r.coordinates = p;\n        return this.getDistance(coordinates, r);\n      });\n      var lowest = Number.POSITIVE_INFINITY;\n      var highest = Number.NEGATIVE_INFINITY;\n      var tmp;\n      let nearLocation;\n\n      for (var i = distList.length - 1; i >= 0; i--) {\n        tmp = distList[i].distance;\n\n        if (tmp < lowest) {\n          nearLocation = distList[i];\n          lowest = tmp;\n        }\n\n        if (tmp > highest) highest = tmp;\n      }\n\n      console.log(\"current buildingh\", nearLocation);\n\n      if (lowest < 0.1) {\n        this.setState({\n          gpsLocation: nearLocation.address,\n          currentBuilding: nearLocation\n        }, () => {\n          console.log(\"building list\", this.state.currentBuilding); // this.getBuildingList(nearLocation.venueName,coordinates)\n        });\n      }\n    };\n\n    this.rad = function (x) {\n      return x * Math.PI / 180;\n    };\n\n    this.getDistance = function (p1, p2) {\n      // console.log(\"p1 and p2\",p1,p2)\n      var R = 6378137; // Earthâ€™s mean radius in meter\n\n      var dLat = this.rad(p2.coordinates[0] - p1[0]);\n      var dLong = this.rad(p2.coordinates[1] - p1[1]);\n      var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(this.rad(p1[0])) * Math.cos(this.rad(p2.coordinates[0])) * Math.sin(dLong / 2) * Math.sin(dLong / 2);\n      var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      var d = R * c / 1000;\n      p2.distance = d;\n      return p2; // returns the distance in km\n    };\n\n    this.state = {\n      sidebarLeft: false,\n      gpsLocation: \"\",\n      currentLocation: \"\",\n      currentVenue: {\n        address: \"\",\n        coordinates: [],\n        dateCreated: \"\",\n        distance: 2,\n        id: 0,\n        liveStatus: true,\n        organization: \"\",\n        venueName: \"\"\n      },\n      currentBuilding: {\n        address: \"\",\n        buildingName: \"\",\n        coordinates: [],\n        distance: 2,\n        lat: 0,\n        lng: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (window.navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success => {\n        let coordinates = [success.coords.latitude, success.coords.longitude];\n        const geocoder = L.Control.Geocoder.nominatim();\n        let lat = coordinates[0];\n        let lng = coordinates[1];\n        this.props.getGpsLocation({\n          lat,\n          lng\n        }, () => {\n          console.log(\"gps location\", this.props.gpsLocation);\n          this.setState({\n            currentLocation: this.props.gpsLocation.display_name\n          });\n        });\n        this.getVenueList(coordinates);\n      });\n    } else {// x.innerHTML = \"Geolocation is not supported by this browser.\";\n    }\n  }\n\n  render() {\n    const {\n      sidebarLeft\n    } = this.state;\n    const routeComponents = routes.map(({\n      path,\n      component,\n      i\n    }) => /*#__PURE__*/_jsxDEV(Route, {\n      path: path,\n      component: component\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this));\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [this.state.gpsLocation.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row w-100\",\n        style: {\n          position: \"absolute\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-11 pr-0\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gps-location text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"float-left ml-2 mt-3\",\n              src: \"/inclunav/assets/images/user_location.png\",\n              alt: \"current location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"text-justify w-75 mx-auto my-auto\",\n              children: this.state.currentLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-1 \",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"ellipse\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"mx-auto my-auto\",\n              src: \"/inclunav/assets/images/share.png\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-dashboard container-fluid d-flex justify-content-center align-items-center h-95\",\n        style: {\n          marginTop: \"50px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-white row \",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-lg-12 \",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-center\",\n              id: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-dashboard btn-dashboard-text mx-auto btn-block btn-default font-weight-bold h2\",\n                onClick: () => {\n                  this.props.history.push({\n                    pathname: \"/navigate\",\n                    search: `${this.state.currentVenue.venueName}&&${this.state.currentBuilding.buildingName}`\n                  });\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"float-left\",\n                  src: \"/inclunav/assets/images/navigate.png\",\n                  alt: \"navigate button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \" Navigate \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"sr-only\",\n                  children: \"Double tap to continue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 65\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-dashboard btn-dashboard-text mx-auto btn-block btn-default font-weight-bold  h2\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"float-left\",\n                  src: \"/inclunav/assets/images/explore.png\",\n                  alt: \"explore button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  \"aria-hidden\": \"true\",\n                  children: \" Explore \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 20\n                }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"sr-only\",\n                  children: \"Double tap to continue\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 64\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-dashboard  mx-auto btn-block btn-default font-weight-bold  h2\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  className: \"float-left\",\n                  src: \"/inclunav/assets/images/location_info.png\",\n                  alt: \"location information button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"btn-dashboard-text-location\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    \"aria-hidden\": \"true\",\n                    children: \" Location Information \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 19\n                  }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"sr-only\",\n                    children: \"Double tap to continue\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 76\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    getImage: state.imgDetails,\n    allNodes: state.getAllElem,\n    //   bList: state.buildingList,\n    flrList: state.floorList,\n    navigationInfo: state.navigationInfo,\n    vnList: state.venueList,\n    bldList: state.buildingList,\n    gpsLocation: state.gpsLocation\n  };\n};\n\nexport default connect(mapStateToProps, {\n  floorList,\n  imgDetails,\n  getAllBuildingElements,\n  venueList,\n  buildingList,\n  getGpsLocation\n})(Landing);","map":{"version":3,"sources":["/home/home/navigation/src/components/dashboard/Landing.js"],"names":["React","css","Drawer","Typeahead","floorList","imgDetails","getAllBuildingElements","venueList","buildingList","getGpsLocation","connect","Navigation","Link","Route","Map","TileLayer","L","routes","path","component","center","lat","lng","Card","Toggle","modal","Sidebar","Landing","Component","constructor","props","getVenueList","coordinates","setState","vnList","data","findNearVenue","state","distList","map","r","getDistance","lowest","Number","POSITIVE_INFINITY","highest","NEGATIVE_INFINITY","tmp","nearLocation","i","length","distance","gpsLocation","address","currentVenue","getBuildingList","venueName","bldList","findNearBuilding","p","console","log","currentBuilding","rad","x","Math","PI","p1","p2","R","dLat","dLong","a","sin","cos","c","atan2","sqrt","d","sidebarLeft","currentLocation","dateCreated","id","liveStatus","organization","buildingName","componentDidMount","window","navigator","geolocation","getCurrentPosition","success","coords","latitude","longitude","geocoder","Control","Geocoder","nominatim","display_name","render","routeComponents","position","marginTop","history","push","pathname","search","mapStateToProps","getImage","allNodes","getAllElem","flrList","navigationInfo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,SAAT,QAA0B,2BAA1B;AACA,OAAO,6CAAP;AACA,OAAO,qBAAP;AACA,SACEC,SADF,EAEEC,UAFF,EAGEC,sBAHF,EAIEC,SAJF,EAKEC,YALF,EAMEC,cANF,QAOO,2BAPP;AAQA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,kBAA5B;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,eAA/B;AACA,OAAOC,CAAP,MAAc,SAAd;AAEA,MAAMC,MAAM,GAAG,CACb;AACEC,EAAAA,IAAI,EAAE,OADR;AAEEC,EAAAA,SAAS,EAAER;AAFb,CADa,CAAf;AAOA,MAAMS,MAAM,GAAG;AAAEC,EAAAA,GAAG,EAAE,OAAP;AAAgBC,EAAAA,GAAG,EAAE;AAArB,CAAf;AAEA,MAAMC,IAAI,GAAGtB,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAeA,MAAMuB,MAAM,GAAGvB,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;AAiBA,MAAMwB,KAAK,GAAGxB,GAAI;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;AAWA,MAAMyB,OAAO,GAAGzB,GAAI;AACpB,IAAIwB,KAAM;AACV;AACA;AACA;AACA;AACA,CANA;;AAQA,MAAME,OAAN,SAAsB3B,KAAK,CAAC4B,SAA5B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA+CnBC,YA/CmB,GA+CJC,WAAW,IAAI;AAC5B,WAAKF,KAAL,CAAWvB,SAAX,CAAqB,MAAM;AACzB,aAAK0B,QAAL,CACE;AACE1B,UAAAA,SAAS,EAAE,KAAKuB,KAAL,CAAWI,MAAX,CAAkBC;AAD/B,SADF,EAIE,MAAM;AACJ,eAAKC,aAAL,CAAmBJ,WAAnB;AACD,SANH;AAQD,OATD;AAUD,KA1DkB;;AAAA,SA4DnBI,aA5DmB,GA4DHJ,WAAW,IAAI;AAC7B,UAAI;AAAEzB,QAAAA;AAAF,UAAgB,KAAK8B,KAAzB;AACA,UAAIC,QAAQ,GAAG/B,SAAS,CAACgC,GAAV,CAAcC,CAAC,IAAI;AAChC,eAAO,KAAKC,WAAL,CAAiBT,WAAjB,EAA8BQ,CAA9B,CAAP;AACD,OAFc,CAAf;AAGA,UAAIE,MAAM,GAAGC,MAAM,CAACC,iBAApB;AACA,UAAIC,OAAO,GAAGF,MAAM,CAACG,iBAArB;AACA,UAAIC,GAAJ;AACA,UAAIC,YAAJ;;AACA,WAAK,IAAIC,CAAC,GAAGX,QAAQ,CAACY,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7CF,QAAAA,GAAG,GAAGT,QAAQ,CAACW,CAAD,CAAR,CAAYE,QAAlB;;AACA,YAAIJ,GAAG,GAAGL,MAAV,EAAkB;AAChBM,UAAAA,YAAY,GAAGV,QAAQ,CAACW,CAAD,CAAvB;AACAP,UAAAA,MAAM,GAAGK,GAAT;AACD;;AACD,YAAIA,GAAG,GAAGF,OAAV,EAAmBA,OAAO,GAAGE,GAAV;AACpB;;AACD,UAAIL,MAAM,GAAG,CAAb,EAAgB;AACd,aAAKT,QAAL,CACE;AACEmB,UAAAA,WAAW,EAAEJ,YAAY,CAACK,OAD5B;AAEEC,UAAAA,YAAY,EAAEN;AAFhB,SADF,EAKE,MAAM;AACJ,eAAKO,eAAL,CAAqBP,YAAY,CAACQ,SAAlC,EAA6CxB,WAA7C;AACD,SAPH;AASD;AACF,KAxFkB;;AAAA,SA0FnBuB,eA1FmB,GA0FD,CAACC,SAAD,EAAYxB,WAAZ,KAA4B;AAC5C,WAAKF,KAAL,CAAWtB,YAAX,CAAwB;AAAEgD,QAAAA,SAAS,EAAE;AAAb,OAAxB,EAAyD,MAAM;AAC7D,aAAKvB,QAAL,CACE;AACEzB,UAAAA,YAAY,EAAE,KAAKsB,KAAL,CAAW2B,OAAX,CAAmBtB;AADnC,SADF,EAIE,MAAM;AACJ,cAAI,KAAKE,KAAL,CAAW7B,YAAX,CAAwB0C,MAAxB,GAAiC,CAArC,EAAwC;AACtC,iBAAKQ,gBAAL,CAAsB1B,WAAtB;AACD;AACF,SARH;AAUD,OAXD;AAYD,KAvGkB;;AAAA,SAyGnB0B,gBAzGmB,GAyGA1B,WAAW,IAAI;AAChC,UAAI;AAAExB,QAAAA;AAAF,UAAmB,KAAK6B,KAA5B;AACA,UAAIC,QAAQ,GAAG9B,YAAY,CAAC+B,GAAb,CAAiBC,CAAC,IAAI;AACnC,YAAImB,CAAC,GAAG,CAACnB,CAAC,CAACnB,GAAH,EAAQmB,CAAC,CAAClB,GAAV,CAAR;AACAkB,QAAAA,CAAC,CAACR,WAAF,GAAgB2B,CAAhB;AACA,eAAO,KAAKlB,WAAL,CAAiBT,WAAjB,EAA8BQ,CAA9B,CAAP;AACD,OAJc,CAAf;AAKA,UAAIE,MAAM,GAAGC,MAAM,CAACC,iBAApB;AACA,UAAIC,OAAO,GAAGF,MAAM,CAACG,iBAArB;AACA,UAAIC,GAAJ;AACA,UAAIC,YAAJ;;AACA,WAAK,IAAIC,CAAC,GAAGX,QAAQ,CAACY,MAAT,GAAkB,CAA/B,EAAkCD,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7CF,QAAAA,GAAG,GAAGT,QAAQ,CAACW,CAAD,CAAR,CAAYE,QAAlB;;AACA,YAAIJ,GAAG,GAAGL,MAAV,EAAkB;AAChBM,UAAAA,YAAY,GAAGV,QAAQ,CAACW,CAAD,CAAvB;AACAP,UAAAA,MAAM,GAAGK,GAAT;AACD;;AACD,YAAIA,GAAG,GAAGF,OAAV,EAAmBA,OAAO,GAAGE,GAAV;AACpB;;AACDa,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCb,YAAjC;;AACA,UAAIN,MAAM,GAAG,GAAb,EAAkB;AAChB,aAAKT,QAAL,CACE;AACEmB,UAAAA,WAAW,EAAEJ,YAAY,CAACK,OAD5B;AAEES,UAAAA,eAAe,EAAEd;AAFnB,SADF,EAKE,MAAM;AACJY,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6B,KAAKxB,KAAL,CAAWyB,eAAxC,EADI,CAEJ;AACD,SARH;AAUD;AACF,KAzIkB;;AAAA,SA2InBC,GA3ImB,GA2Ib,UAASC,CAAT,EAAY;AAChB,aAAQA,CAAC,GAAGC,IAAI,CAACC,EAAV,GAAgB,GAAvB;AACD,KA7IkB;;AAAA,SA+InBzB,WA/ImB,GA+IL,UAAS0B,EAAT,EAAaC,EAAb,EAAiB;AAC7B;AACA,UAAIC,CAAC,GAAG,OAAR,CAF6B,CAEZ;;AACjB,UAAIC,IAAI,GAAG,KAAKP,GAAL,CAASK,EAAE,CAACpC,WAAH,CAAe,CAAf,IAAoBmC,EAAE,CAAC,CAAD,CAA/B,CAAX;AACA,UAAII,KAAK,GAAG,KAAKR,GAAL,CAASK,EAAE,CAACpC,WAAH,CAAe,CAAf,IAAoBmC,EAAE,CAAC,CAAD,CAA/B,CAAZ;AACA,UAAIK,CAAC,GACHP,IAAI,CAACQ,GAAL,CAASH,IAAI,GAAG,CAAhB,IAAqBL,IAAI,CAACQ,GAAL,CAASH,IAAI,GAAG,CAAhB,CAArB,GACAL,IAAI,CAACS,GAAL,CAAS,KAAKX,GAAL,CAASI,EAAE,CAAC,CAAD,CAAX,CAAT,IACEF,IAAI,CAACS,GAAL,CAAS,KAAKX,GAAL,CAASK,EAAE,CAACpC,WAAH,CAAe,CAAf,CAAT,CAAT,CADF,GAEEiC,IAAI,CAACQ,GAAL,CAASF,KAAK,GAAG,CAAjB,CAFF,GAGEN,IAAI,CAACQ,GAAL,CAASF,KAAK,GAAG,CAAjB,CALJ;AAMA,UAAII,CAAC,GAAG,IAAIV,IAAI,CAACW,KAAL,CAAWX,IAAI,CAACY,IAAL,CAAUL,CAAV,CAAX,EAAyBP,IAAI,CAACY,IAAL,CAAU,IAAIL,CAAd,CAAzB,CAAZ;AACA,UAAIM,CAAC,GAAIT,CAAC,GAAGM,CAAL,GAAU,IAAlB;AACAP,MAAAA,EAAE,CAACjB,QAAH,GAAc2B,CAAd;AACA,aAAOV,EAAP,CAd6B,CAclB;AACZ,KA9JkB;;AAEjB,SAAK/B,KAAL,GAAa;AACX0C,MAAAA,WAAW,EAAE,KADF;AAEX3B,MAAAA,WAAW,EAAE,EAFF;AAGX4B,MAAAA,eAAe,EAAE,EAHN;AAIX1B,MAAAA,YAAY,EAAE;AACZD,QAAAA,OAAO,EAAE,EADG;AAEZrB,QAAAA,WAAW,EAAE,EAFD;AAGZiD,QAAAA,WAAW,EAAE,EAHD;AAIZ9B,QAAAA,QAAQ,EAAE,CAJE;AAKZ+B,QAAAA,EAAE,EAAE,CALQ;AAMZC,QAAAA,UAAU,EAAE,IANA;AAOZC,QAAAA,YAAY,EAAE,EAPF;AAQZ5B,QAAAA,SAAS,EAAE;AARC,OAJH;AAcXM,MAAAA,eAAe,EAAE;AACfT,QAAAA,OAAO,EAAE,EADM;AAEfgC,QAAAA,YAAY,EAAE,EAFC;AAGfrD,QAAAA,WAAW,EAAE,EAHE;AAIfmB,QAAAA,QAAQ,EAAE,CAJK;AAKf9B,QAAAA,GAAG,EAAE,CALU;AAMfC,QAAAA,GAAG,EAAE;AANU;AAdN,KAAb;AAuBD;;AAEDgE,EAAAA,iBAAiB,GAAG;AAClB,QAAIC,MAAM,CAACC,SAAP,CAAiBC,WAArB,EAAkC;AAChCD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCC,OAAO,IAAI;AAClD,YAAI3D,WAAW,GAAG,CAAC2D,OAAO,CAACC,MAAR,CAAeC,QAAhB,EAA0BF,OAAO,CAACC,MAAR,CAAeE,SAAzC,CAAlB;AACA,cAAMC,QAAQ,GAAG/E,CAAC,CAACgF,OAAF,CAAUC,QAAV,CAAmBC,SAAnB,EAAjB;AACA,YAAI7E,GAAG,GAAGW,WAAW,CAAC,CAAD,CAArB;AACA,YAAIV,GAAG,GAAGU,WAAW,CAAC,CAAD,CAArB;AACA,aAAKF,KAAL,CAAWrB,cAAX,CAA0B;AAAEY,UAAAA,GAAF;AAAOC,UAAAA;AAAP,SAA1B,EAAwC,MAAM;AAC5CsC,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4B,KAAK/B,KAAL,CAAWsB,WAAvC;AACA,eAAKnB,QAAL,CAAc;AACZ+C,YAAAA,eAAe,EAAE,KAAKlD,KAAL,CAAWsB,WAAX,CAAuB+C;AAD5B,WAAd;AAGD,SALD;AAMA,aAAKpE,YAAL,CAAkBC,WAAlB;AACD,OAZD;AAaD,KAdD,MAcO,CACL;AACD;AACF;;AAmHDoE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAErB,MAAAA;AAAF,QAAkB,KAAK1C,KAA7B;AAEA,UAAMgE,eAAe,GAAGpF,MAAM,CAACsB,GAAP,CAAW,CAAC;AAAErB,MAAAA,IAAF;AAAQC,MAAAA,SAAR;AAAmB8B,MAAAA;AAAnB,KAAD,kBACjC,QAAC,KAAD;AAAO,MAAA,IAAI,EAAE/B,IAAb;AAAmB,MAAA,SAAS,EAAEC;AAA9B,OAA8C8B,CAA9C;AAAA;AAAA;AAAA;AAAA,YADsB,CAAxB;AAIA,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,iBACG,KAAKZ,KAAL,CAAWe,WAAX,CAAuBF,MAAvB,GAAgC,CAAhC,gBACC;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAE;AAAEoD,UAAAA,QAAQ,EAAE;AAAZ,SAAlC;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,yBAAf;AAAA,oCACE;AACE,cAAA,SAAS,EAAC,sBADZ;AAEE,cAAA,GAAG,EAAC,2CAFN;AAGE,cAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,oBADF,eAME;AAAG,cAAA,SAAS,EAAC,mCAAb;AAAA,wBACG,KAAKjE,KAAL,CAAW2C;AADd;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAaE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE;AAAQ,YAAA,SAAS,EAAC,SAAlB;AAAA,mCACE;AACE,cAAA,SAAS,EAAC,iBADZ;AAEE,cAAA,GAAG,EAAC;AAFN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAuBG,IAxBN,eAyBE;AACE,QAAA,SAAS,EAAC,oFADZ;AAEE,QAAA,KAAK,EAAE;AAAEuB,UAAAA,SAAS,EAAE;AAAb,SAFT;AAAA,+BAIE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,YAAf;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,aAAf;AAA6B,cAAA,EAAE,EAAC,SAAhC;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,wFADZ;AAEE,gBAAA,OAAO,EAAE,MAAM;AACb,uBAAKzE,KAAL,CAAW0E,OAAX,CAAmBC,IAAnB,CAAwB;AACtBC,oBAAAA,QAAQ,EAAE,WADY;AAEtBC,oBAAAA,MAAM,EAAG,GAAE,KAAKtE,KAAL,CAAWiB,YAAX,CAAwBE,SAAU,KAAI,KAAKnB,KAAL,CAAWyB,eAAX,CAA2BuB,YAAa;AAFnE,mBAAxB;AAID,iBAPH;AAAA,wCASE;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,GAAG,EAAC,sCAFN;AAGE,kBAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,wBATF,eAcI;AAAM,iCAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdJ,oBAcgD;AAAM,kBAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAdhD;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAiBE;AAAQ,gBAAA,SAAS,EAAC,yFAAlB;AAAA,wCACE;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,GAAG,EAAC,qCAFN;AAGE,kBAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,wBADF,eAMG;AAAM,iCAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANH,qBAM+C;AAAM,kBAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAN/C;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBF,eAyBE;AAAQ,gBAAA,SAAS,EAAC,uEAAlB;AAAA,wCACE;AACE,kBAAA,SAAS,EAAC,YADZ;AAEE,kBAAA,GAAG,EAAC,2CAFN;AAGE,kBAAA,GAAG,EAAC;AAHN;AAAA;AAAA;AAAA;AAAA,wBADF,eAME;AAAG,kBAAA,SAAS,EAAC,6BAAb;AAAA,0CACA;AAAM,mCAAY,MAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,qBACyD;AAAM,oBAAA,KAAK,EAAC,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADzD;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF;AAAA;AAAA;AAAA;AAAA;AAAA,sBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,cAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAyED;;AAjPmC;;AAoPtC,MAAMuB,eAAe,GAAGvE,KAAK,IAAI;AAC/B,SAAO;AACLwE,IAAAA,QAAQ,EAAExE,KAAK,CAAChC,UADX;AAELyG,IAAAA,QAAQ,EAAEzE,KAAK,CAAC0E,UAFX;AAGL;AACAC,IAAAA,OAAO,EAAE3E,KAAK,CAACjC,SAJV;AAKL6G,IAAAA,cAAc,EAAE5E,KAAK,CAAC4E,cALjB;AAML/E,IAAAA,MAAM,EAAEG,KAAK,CAAC9B,SANT;AAOLkD,IAAAA,OAAO,EAAEpB,KAAK,CAAC7B,YAPV;AAQL4C,IAAAA,WAAW,EAAEf,KAAK,CAACe;AARd,GAAP;AAUD,CAXD;;AAaA,eAAe1C,OAAO,CAACkG,eAAD,EAAkB;AACtCxG,EAAAA,SADsC;AAEtCC,EAAAA,UAFsC;AAGtCC,EAAAA,sBAHsC;AAItCC,EAAAA,SAJsC;AAKtCC,EAAAA,YALsC;AAMtCC,EAAAA;AANsC,CAAlB,CAAP,CAOZkB,OAPY,CAAf","sourcesContent":["import React from \"react\";\nimport { css } from \"@emotion/css\";\nimport Drawer from \"react-drag-drawer\";\nimport { Typeahead } from \"react-bootstrap-typeahead\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./css/dashboard.css\";\nimport {\n  floorList,\n  imgDetails,\n  getAllBuildingElements,\n  venueList,\n  buildingList,\n  getGpsLocation\n} from \"../../store/actions/index\";\nimport { connect } from \"react-redux\";\nimport Navigation from \"./navigation/Navigation\";\nimport { Link, Route } from \"react-router-dom\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport L from \"leaflet\";\n\nconst routes = [\n  {\n    path: \"/test\",\n    component: Navigation\n  }\n];\n\nconst center = { lat: 28.6139, lng: 77.209 };\n\nconst Card = css`\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  margin: 40px auto;\n  @media (min-width: 768px) {\n    border-radius: 0;\n  }\n  button {\n    margin-top: 50px;\n  }\n`;\n\nconst Toggle = css`\n  background-color: #d50152;\n  border-radius: 4px;\n  color: white;\n  border: 0;\n  padding: 10px;\n  font-size: 16px;\n  cursor: pointer;\n  outline: none;\n  margin-left: 50%;\n  margin-top: 0px !important;\n  transition: all 0.25s linear;\n  &:active {\n    transform: scale(0.9);\n  }\n`;\n\nconst modal = css`\n  position: absolute;\n  top: 30px;\n  background-color: white;\n  width: 100%;\n  max-width: 700px;\n  min-height: 100%;\n  border-top-left-radius: 4px;\n  border-top-right-radius: 4px;\n`;\n\nconst Sidebar = css`\n  ${modal} top: 0;\n  max-width: 300px;\n  border-radius: 0;\n  left: 0;\n  background: linear-gradient(to bottom, #09203f, #1d4a6d);\n`;\n\nclass Landing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sidebarLeft: false,\n      gpsLocation: \"\",\n      currentLocation: \"\",\n      currentVenue: {\n        address: \"\",\n        coordinates: [],\n        dateCreated: \"\",\n        distance: 2,\n        id: 0,\n        liveStatus: true,\n        organization: \"\",\n        venueName: \"\"\n      },\n      currentBuilding: {\n        address: \"\",\n        buildingName: \"\",\n        coordinates: [],\n        distance: 2,\n        lat: 0,\n        lng: 0\n      }\n    };\n  }\n\n  componentDidMount() {\n    if (window.navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(success => {\n        let coordinates = [success.coords.latitude, success.coords.longitude];\n        const geocoder = L.Control.Geocoder.nominatim();\n        let lat = coordinates[0];\n        let lng = coordinates[1];\n        this.props.getGpsLocation({ lat, lng }, () => {\n          console.log(\"gps location\", this.props.gpsLocation);\n          this.setState({\n            currentLocation: this.props.gpsLocation.display_name\n          });\n        });\n        this.getVenueList(coordinates);\n      });\n    } else {\n      // x.innerHTML = \"Geolocation is not supported by this browser.\";\n    }\n  }\n\n  getVenueList = coordinates => {\n    this.props.venueList(() => {\n      this.setState(\n        {\n          venueList: this.props.vnList.data\n        },\n        () => {\n          this.findNearVenue(coordinates);\n        }\n      );\n    });\n  };\n\n  findNearVenue = coordinates => {\n    let { venueList } = this.state;\n    let distList = venueList.map(r => {\n      return this.getDistance(coordinates, r);\n    });\n    var lowest = Number.POSITIVE_INFINITY;\n    var highest = Number.NEGATIVE_INFINITY;\n    var tmp;\n    let nearLocation;\n    for (var i = distList.length - 1; i >= 0; i--) {\n      tmp = distList[i].distance;\n      if (tmp < lowest) {\n        nearLocation = distList[i];\n        lowest = tmp;\n      }\n      if (tmp > highest) highest = tmp;\n    }\n    if (lowest < 1) {\n      this.setState(\n        {\n          gpsLocation: nearLocation.address,\n          currentVenue: nearLocation\n        },\n        () => {\n          this.getBuildingList(nearLocation.venueName, coordinates);\n        }\n      );\n    }\n  };\n\n  getBuildingList = (venueName, coordinates) => {\n    this.props.buildingList({ venueName: \"IITCampusCheck\" }, () => {\n      this.setState(\n        {\n          buildingList: this.props.bldList.data\n        },\n        () => {\n          if (this.state.buildingList.length > 0) {\n            this.findNearBuilding(coordinates);\n          }\n        }\n      );\n    });\n  };\n\n  findNearBuilding = coordinates => {\n    let { buildingList } = this.state;\n    let distList = buildingList.map(r => {\n      let p = [r.lat, r.lng];\n      r.coordinates = p;\n      return this.getDistance(coordinates, r);\n    });\n    var lowest = Number.POSITIVE_INFINITY;\n    var highest = Number.NEGATIVE_INFINITY;\n    var tmp;\n    let nearLocation;\n    for (var i = distList.length - 1; i >= 0; i--) {\n      tmp = distList[i].distance;\n      if (tmp < lowest) {\n        nearLocation = distList[i];\n        lowest = tmp;\n      }\n      if (tmp > highest) highest = tmp;\n    }\n    console.log(\"current buildingh\", nearLocation);\n    if (lowest < 0.1) {\n      this.setState(\n        {\n          gpsLocation: nearLocation.address,\n          currentBuilding: nearLocation\n        },\n        () => {\n          console.log(\"building list\", this.state.currentBuilding);\n          // this.getBuildingList(nearLocation.venueName,coordinates)\n        }\n      );\n    }\n  };\n\n  rad = function(x) {\n    return (x * Math.PI) / 180;\n  };\n\n  getDistance = function(p1, p2) {\n    // console.log(\"p1 and p2\",p1,p2)\n    var R = 6378137; // Earthâ€™s mean radius in meter\n    var dLat = this.rad(p2.coordinates[0] - p1[0]);\n    var dLong = this.rad(p2.coordinates[1] - p1[1]);\n    var a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(this.rad(p1[0])) *\n        Math.cos(this.rad(p2.coordinates[0])) *\n        Math.sin(dLong / 2) *\n        Math.sin(dLong / 2);\n    var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    var d = (R * c) / 1000;\n    p2.distance = d;\n    return p2; // returns the distance in km\n  };\n\n  render() {\n    const { sidebarLeft } = this.state;\n\n    const routeComponents = routes.map(({ path, component, i }) => (\n      <Route path={path} component={component} key={i} />\n    ));\n\n    return (\n      <React.Fragment>\n        {this.state.gpsLocation.length > 0 ? (\n          <div className=\"row w-100\" style={{ position: \"absolute\" }}>\n            <div className=\"col-11 pr-0\">\n              <div className=\"gps-location text-white\">\n                <img\n                  className=\"float-left ml-2 mt-3\"\n                  src=\"/inclunav/assets/images/user_location.png\"\n                  alt=\"current location\"\n                />\n                <p className=\"text-justify w-75 mx-auto my-auto\">\n                  {this.state.currentLocation}\n                </p>\n              </div>\n            </div>\n            <div className=\"col-1 \">\n              <button className=\"ellipse\">\n                <img\n                  className=\"mx-auto my-auto\"\n                  src=\"/inclunav/assets/images/share.png\"\n                />\n              </button>\n            </div>\n          </div>\n        ) : null}\n        <div\n          className=\"bg-dashboard container-fluid d-flex justify-content-center align-items-center h-95\"\n          style={{ marginTop: \"50px\" }}\n        >\n          <div className=\"text-white row \">\n            <div className=\"col-lg-12 \">\n              <div className=\"text-center\" id=\"content\">\n                <button\n                  className=\"btn btn-dashboard btn-dashboard-text mx-auto btn-block btn-default font-weight-bold h2\"\n                  onClick={() => {\n                    this.props.history.push({\n                      pathname: \"/navigate\",\n                      search: `${this.state.currentVenue.venueName}&&${this.state.currentBuilding.buildingName}`\n                    });\n                  }}\n                >\n                  <img\n                    className=\"float-left\"\n                    src=\"/inclunav/assets/images/navigate.png\"\n                    alt=\"navigate button\"\n                  />\n                    <span aria-hidden=\"true\" > Navigate </span> <span class=\"sr-only\">Double tap to continue</span>\n                </button>\n                <button className=\"btn btn-dashboard btn-dashboard-text mx-auto btn-block btn-default font-weight-bold  h2\">\n                  <img\n                    className=\"float-left\"\n                    src=\"/inclunav/assets/images/explore.png\"\n                    alt=\"explore button\"\n                  />\n                   <span aria-hidden=\"true\" > Explore </span>  <span class=\"sr-only\">Double tap to continue</span>\n                </button>\n                <button className=\"btn btn-dashboard  mx-auto btn-block btn-default font-weight-bold  h2\">\n                  <img\n                    className=\"float-left\"\n                    src=\"/inclunav/assets/images/location_info.png\"\n                    alt=\"location information button\"\n                  />\n                  <p className=\"btn-dashboard-text-location\">\n                  <span aria-hidden=\"true\" > Location Information </span>  <span class=\"sr-only\">Double tap to continue</span> \n                  </p>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    getImage: state.imgDetails,\n    allNodes: state.getAllElem,\n    //   bList: state.buildingList,\n    flrList: state.floorList,\n    navigationInfo: state.navigationInfo,\n    vnList: state.venueList,\n    bldList: state.buildingList,\n    gpsLocation: state.gpsLocation\n  };\n};\n\nexport default connect(mapStateToProps, {\n  floorList,\n  imgDetails,\n  getAllBuildingElements,\n  venueList,\n  buildingList,\n  getGpsLocation\n})(Landing);\n"]},"metadata":{},"sourceType":"module"}